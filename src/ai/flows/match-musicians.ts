// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A musician matching AI agent.
 *
 * - matchMusicians - A function that handles the musician matching process.
 * - MatchMusiciansInput - The input type for the matchMusicians function.
 * - MatchMusiciansOutput - The return type for the matchMusicians function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MatchMusiciansInputSchema = z.object({
  needs: z.string().describe('The specific musical needs of the user (e.g., drummer for a rock band, vocalist for a jazz ensemble).'),
  userProfile: z.string().describe('The profile of the user, including skills, experience, and influences.'),
  userPosts: z.string().describe('The recent posts of the user, which may indicate current musical interests or projects.'),
});
export type MatchMusiciansInput = z.infer<typeof MatchMusiciansInputSchema>;

const MatchMusiciansOutputSchema = z.object({
  musicianMatches: z.array(
    z.object({
      name: z.string().describe('The name of the musician.'),
      profileSummary: z.string().describe('A summary of the musician\'s profile, highlighting relevant skills and experience.'),
      matchReason: z.string().describe('The reason why this musician is a good match for the user\'s needs.'),
      contactInfo: z.string().describe('The contact information of the musician.'),
    })
  ).describe('A list of musicians that match the user\'s needs.'),
});
export type MatchMusiciansOutput = z.infer<typeof MatchMusiciansOutputSchema>;

export async function matchMusicians(input: MatchMusiciansInput): Promise<MatchMusiciansOutput> {
  return matchMusiciansFlow(input);
}

const prompt = ai.definePrompt({
  name: 'matchMusiciansPrompt',
  input: {schema: MatchMusiciansInputSchema},
  output: {schema: MatchMusiciansOutputSchema},
  prompt: `You are an AI assistant designed to match musicians with each other based on their needs, profiles, and recent posts.

  Given the following information about a user and their musical needs, find other musicians who would be a good fit.  Provide a list of musician matches including their name, a summary of their profile highlighting relevant skills, why they are a good match, and how to contact them.

  User Needs: {{{needs}}}
  User Profile: {{{userProfile}}}
  User Posts: {{{userPosts}}}
  `,
});

const matchMusiciansFlow = ai.defineFlow(
  {
    name: 'matchMusiciansFlow',
    inputSchema: MatchMusiciansInputSchema,
    outputSchema: MatchMusiciansOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
